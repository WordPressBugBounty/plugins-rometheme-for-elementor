 

class Rkit_advanced_heading extends \Elementor\Widget_Base
{
    public function get_name()
    {
        return 'rkit_advanced_heading';
    }
    public function get_title()
    {
        return 'Advanced Heading';
    }   

    public function get_icon()
    {
        return 'rkit-widget-icon eicon-animated-headline';
    }

    public function get_keywords()
    {
        return ['rometheme', 'heading', 'animation','advanced', 'animation text', ' heading'];
    }

    function get_custom_help_url()
    {
        return 'https://support.rometheme.net/docs/romethemekit/widgets/';
    }

    public function get_categories()
    {
        return ['romethemekit_widgets'];
    }

    public function get_style_depends()
    {
        return ['rkit-advanced_heading-style'];
    }

    protected function register_controls()
    {
        $this->start_controls_section('content_section', ['label' => esc_html('Content'), 'tab' => \Elementor\Controls_Manager::TAB_CONTENT]);

        $this->add_control(
            'before_text',
            [
                'label' => esc_html__('Before Text', 'rometheme-for-elementor'),
                'type' => \Elementor\Controls_Manager::TEXTAREA,
                'rows' => 3,
                'default' => esc_html__('Rometheme'),
                'placeholder' => esc_html__('Type your text here', 'rometheme-for-elementor'),
              ]
        );

        $this->add_control(
            'center_text',
            [
                'label' => esc_html__('Center Text', 'rometheme-for-elementor'),
                'type' => \Elementor\Controls_Manager::TEXTAREA,
                'rows' => 3,
                'default' => esc_html__('Studio'),
                'placeholder' => esc_html__('Advanced Heading', 'rometheme-for-elementor'),  
            
        ]
        );

        $this->add_control(
            'after_text',
            [
                'label' => esc_html__('After Text', 'rometheme-for-elementor'),
                'type' => \Elementor\Controls_Manager::TEXTAREA,
                'rows' => 3,
                'default' => esc_html__('Widget Plugin'),
                'placeholder' => esc_html__('Widget', 'rometheme-for-elementor'),   
            ]
        );

   

        $this->add_control(
            'hr_link',
            [
                'type' => \Elementor\Controls_Manager::DIVIDER,
            ]
        );

        $this->add_responsive_control(
			'text_align',
			[
				'label' => esc_html__( 'Alignment', 'rometheme-for-elementor' ),
				'type' => \Elementor\Controls_Manager::CHOOSE,
				'options' => [
					'left' => [
						'title' => esc_html__( 'Left', 'rometheme-for-elementor' ),
						'icon' => 'eicon-text-align-left',
					],
					'center' => [
						'title' => esc_html__( 'Center', 'rometheme-for-elementor' ),
						'icon' => 'eicon-text-align-center',
					],
					'right' => [
						'title' => esc_html__( 'Right', 'rometheme-for-elementor' ),
						'icon' => 'eicon-text-align-right',
					],
				],
				'default' => 'center',
				'toggle' => true,
				'selectors' => [
					'{{WRAPPER}} .combined-text ' => 'justify-content: {{VALUE}};',
				],
			]
		);

        $this->add_control(
            '_link',
            [
                'label' => esc_html__('Link', 'rometheme-for-elementor'),
                'type' => \Elementor\Controls_Manager::URL,
                'placeholder' => esc_html__('https://your-link.com', 'rometheme-for-elementor'),
                'options' => ['url', 'is_external', 'nofollow'],
                'default' => [
                    'url' => '',
                    'is_external' => true,
                    'nofollow' => true,
                    // 'custom_attributes' => '',
                ],
                'label_block' => true,
            ]
        );

        $this->add_control('html_tag' , [
            'label' => esc_html('Tag'),
            'type' => \Elementor\Controls_Manager::SELECT,
            'options' => [
                'h1' => esc_html('H1'),
                'h2' => esc_html('H2'),
                'h3' => esc_html('H3'),
                'h4' => esc_html('H4'),
                'h5' => esc_html('H5'),
                'h6' => esc_html('H6'),
            ],
            'default' => 'h1'
        ]);

        $this->end_controls_section();

        // stylee ========================================================================================

        $this->start_controls_section('Container' , [
            'label' => esc_html('Container'),
            'tab' => \Elementor\Controls_Manager::TAB_STYLE
        ]);


        $this->add_responsive_control(
            'text_spacing',
            [
                'label' => esc_html__('Spacing', 'rometheme-for-elementor'),
                'type' => \Elementor\Controls_Manager::SLIDER,
                'size_units' => ['px', '%', 'em', 'rem'],
                'range' => [
                  'px' => [
                        'min' => 0,
                        'max' => 1000,
                        'step' => 2,
                    ],
                    '%' => [
                        'min' => 10,
                        'max' => 100,
                    ],
                ],
                'selectors' => [
                    '{{WRAPPER}} .combined-text' => 'gap: {{SIZE}}{{UNIT}};',
                ],
            ]
        );
       
        $this->add_group_control(
            \Elementor\Group_Control_Background::get_type(),
            [
                'name' => 'cont_advanced', 
                'types' => ['classic', 'gradient',],
                'selector' => '{{WRAPPER}} .combined-text',               
            ]
        );

        $this->add_control(
            'cont_advanced_padding',
            [
                'label' => esc_html__('Container Padding', 'rometheme-for-elementor'),
                'type' => \Elementor\Controls_Manager::DIMENSIONS,
                'size_units' => ['px', '%', 'em', 'rem'],
                'selectors' => [
                    '{{WRAPPER}} .combined-text' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',
                ],
            ]
        );

        $this->add_responsive_control(
            'cont_radius',
            [
                'label' => esc_html__('Border Radius', 'textdomain'),
                'type' => \Elementor\Controls_Manager::DIMENSIONS,
                'size_units' => ['px', '%', 'em', 'rem'],
                'selectors' => [
                    '{{WRAPPER}} .combined-text' => 'border-radius: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',
                ],
            ]
        );
        

        $this->end_controls_section();
 
        // style before text       
        $this->start_controls_section('headline_style' , [
            'label' => esc_html('Before Text'),
            'tab' => \Elementor\Controls_Manager::TAB_STYLE
        ]);

        $this->add_group_control(
			\Elementor\Group_Control_Typography::get_type(),
			[
				'name' => 'headline_typography',
				'selector' => '{{WRAPPER}} .before_text',
			]
		);
        $this->add_group_control(
			\Elementor\Group_Control_Text_Stroke::get_type(),
			[
				'name' => 'before_text_stroke',
				'selector' => '{{WRAPPER}} .before_text',
			]
		);

        $this->add_group_control(
			\Elementor\Group_Control_Text_Shadow::get_type(),
			[
				'name' => 'before_text_shadow',
				'selector' => '{{WRAPPER}} .before_text',
			]
		);

        $this->add_control(
            'before_text_padding',
            [
                'label' => esc_html__('Text Before Padding', 'rometheme-for-elementor'),
                'type' => \Elementor\Controls_Manager::DIMENSIONS,
                'size_units' => ['px', '%', 'em', 'rem'],
                'selectors' => [
                    '{{WRAPPER}} .before_text ' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',
                ],
            ]
        );

        $this->add_responsive_control(
            'before_radius',
            [
                'label' => esc_html__('Border Radius', 'textdomain'),
                'type' => \Elementor\Controls_Manager::DIMENSIONS,
                'size_units' => ['px', '%', 'em', 'rem'],
                'selectors' => [
                    '{{WRAPPER}} .bg-before' => 'border-radius: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',
                ],
            ]
        );

        $this->add_control(
            'textcolorbefore',
            [   
                'label' => esc_html__( 'Text Color', 'rometheme-for-elementor' ),
                'type' => \Elementor\Controls_Manager::HEADING,
                'separator' => 'before',
            ]
        );

        $this->add_group_control(
            \Elementor\Group_Control_Background::get_type(),
            [
                'name' => 'beforetext_background', 
                'types' => ['classic', 'gradient',],
                'selector' => '{{WRAPPER}} .before_text',       
                'fields_options' => [
                    'background' => [
                        'label' => esc_html('Text Color')
                    ]
                ]       
            ]
        );

        $this->add_control(
            'bgtextcolorbefore',
            [   
                'label' => esc_html__( 'Container Color', 'rometheme-for-elementor' ),
                'type' => \Elementor\Controls_Manager::HEADING,
                'separator' => 'before',
            ]
        );

        $this->add_group_control(
            \Elementor\Group_Control_Background::get_type(),
            [
                'name' => 'bg_before', 
                'types' => ['classic', 'gradient',],
                'selector' => '{{WRAPPER}} .bg-before',  
                'fields_options' => [
                    'background' => [
                        'label' => esc_html('Container Color')
                    ]
                ]                
            ]
        );

        $this->end_controls_section();

        // style center text
        $this->start_controls_section('Center_Text_style' , [
            'label' => esc_html('Center Text'),
            'tab' => \Elementor\Controls_Manager::TAB_STYLE
        ]);


        $this->add_group_control(
			\Elementor\Group_Control_Typography::get_type(),
			[
				'name' => 'center_typography',
				'selector' => '{{WRAPPER}} .center_text',
			]
		);

        $this->add_group_control(
			\Elementor\Group_Control_Text_Stroke::get_type(),
			[
				'name' => 'center_text_stroke',
				'selector' => '{{WRAPPER}} .center_text',
			]
		);

        $this->add_group_control(
			\Elementor\Group_Control_Text_Shadow::get_type(),
			[
				'name' => 'center_text_shadow',
				'selector' => '{{WRAPPER}} .center_text',
			]
		);

        $this->add_control(
            'center_text_padding',
            [
                'label' => esc_html__('Text Center Padding', 'rometheme-for-elementor'),
                'type' => \Elementor\Controls_Manager::DIMENSIONS,
                'size_units' => ['px', '%', 'em', 'rem'],
                'selectors' => [
                    '{{WRAPPER}} .center_text ' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',
                ],
            ]
        );
        
        $this->add_responsive_control(
            'center_radius',
            [
                'label' => esc_html__('Border Radius', 'textdomain'),
                'type' => \Elementor\Controls_Manager::DIMENSIONS,
                'size_units' => ['px', '%', 'em', 'rem'],
                'selectors' => [
                    '{{WRAPPER}} .bg-center' => 'border-radius: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',
                ],
            ]
        );

        $this->add_control(
            'textcolorcenter',
            [   
                'label' => esc_html__( 'Text Color', 'rometheme-for-elementor' ),
                'type' => \Elementor\Controls_Manager::HEADING,
                'separator' => 'before',
            ]
        );

        $this->add_group_control(
            \Elementor\Group_Control_Background::get_type(),
            [
                'name' => 'centertext_background', 
                'types' => ['classic', 'gradient',], 
                'selector' => '{{WRAPPER}} .center_text',      
                'fields_options' => [
                    'background' => [
                        'label' => esc_html('Text Color')
                    ]
                ]            
            ]
        );

        $this->add_control(
            'bgtextcolorcenter',
            [   
                'label' => esc_html__( 'Container Color', 'rometheme-for-elementor' ),
                'type' => \Elementor\Controls_Manager::HEADING,
                'separator' => 'before',
            ]
        );

        $this->add_group_control(
            \Elementor\Group_Control_Background::get_type(),
            [
                'name' => 'bg_center', 
                'types' => ['classic', 'gradient',],
                'selector' => '{{WRAPPER}} .bg-center',   
                'fields_options' => [
                    'background' => [
                        'label' => esc_html('Container Color')
                    ]
                ]               
            ]
        );

        $this->end_controls_section();

        // style before text
        $this->start_controls_section('After_Text_style' , [
            'label' => esc_html('After Text'),
            'tab' => \Elementor\Controls_Manager::TAB_STYLE
        ]);


        $this->add_group_control(
			\Elementor\Group_Control_Typography::get_type(),
			[
				'name' => 'after_typography',
				'selector' => '{{WRAPPER}} .after_text',
			]
		);

        $this->add_group_control(
			\Elementor\Group_Control_Text_Stroke::get_type(),
			[
				'name' => 'after_text_stroke',
				'selector' => '{{WRAPPER}} .after_text',
			]
		);

        $this->add_group_control(
			\Elementor\Group_Control_Text_Shadow::get_type(),
			[
				'name' => 'after_text_shadow',
				'selector' => '{{WRAPPER}} .after_text',
			]
		);

        $this->add_control(
            'aftertext_padding',
            [
                'label' => esc_html__('Text After Padding', 'rometheme-for-elementor'),
                'type' => \Elementor\Controls_Manager::DIMENSIONS,
                'size_units' => ['px', '%', 'em', 'rem'],
                'selectors' => [
                    '{{WRAPPER}} .after_text ' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',
                ],
            ]
        );
        
        $this->add_responsive_control(
            'after_radius',
            [
                'label' => esc_html__('Border Radius', 'textdomain'),
                'type' => \Elementor\Controls_Manager::DIMENSIONS,
                'size_units' => ['px', '%', 'em', 'rem'],
                'selectors' => [
                    '{{WRAPPER}} .bg-after' => 'border-radius: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',
                ],
            ]
        );

        $this->add_control(
            'textcolorafter',
            [   
                'label' => esc_html__( 'Text Color', 'rometheme-for-elementor' ),
                'type' => \Elementor\Controls_Manager::HEADING,
                'separator' => 'before',
            ]
        );

        $this->add_group_control(
            \Elementor\Group_Control_Background::get_type(),
            [
                'name' => 'aftertext_background', 
                'types' => ['classic', 'gradient',], 
                'selector' => '{{WRAPPER}} .after_text', 
                'fields_options' => [
                    'background' => [
                        'label' => esc_html('Text Color')
                    ]
                ]                 
            ]
        );

        $this->add_control(
            'bgtextcolorafter',
            [   
                'label' => esc_html__( 'Container Color', 'rometheme-for-elementor' ),
                'type' => \Elementor\Controls_Manager::HEADING,
                'separator' => 'before',
            ]
        );

        $this->add_group_control(
            \Elementor\Group_Control_Background::get_type(),
            [
                'name' => 'bg_after', 
                'types' => ['classic', 'gradient',],
                'selector' => '{{WRAPPER}} .bg-after',
                'fields_options' => [
                    'background' => [
                        'label' => esc_html('Container Color')
                    ]
                ]                  
            ]
        );

        $this->end_controls_section();

      

    }
    protected function render()
    {
        $settings = $this->get_settings_for_display();
  
        if (!empty($settings['_link']['url'])) {
            $this->add_link_attributes('_link', $settings['_link']);
        }

        switch ($settings['html_tag']) {
            case 'h1':
                $html_tag = 'h1';
                break;
            case 'h2':
                $html_tag = 'h2';
                break;
            case 'h3':
                $html_tag = 'h3';
                break;
            case 'h4':
                $html_tag = 'h4';
                break;
            case 'h5':
                $html_tag = 'h5';
                break;
            case 'h6':
                $html_tag = 'h6';
                break;
            default:
                $html_tag = 'h1';
                break;
        }
 

 


<a <?php echo esc_attr($this->get_render_attribute_string('_link')); ?>>

    <<?= $html_tag ?> class="rkit-advanced-heading  ">
    
       <div class="combined-text">
        <div class="bg-before">
            <span class="before_text rkit-trp-text"> <?php echo esc_html($settings['before_text']); ?> </span>
        </div>
        <div class="bg-center">
            <span class="center_text rkit-trp-text"><?php echo esc_html($settings['center_text']); ?>  </span>
        </div>
        <div class="bg-after">
            <span class="after_text rkit-trp-text"><?php echo esc_html($settings['after_text']); ?> </span>
        </div>
    
    </<?= esc_html($html_tag); ?>>

</a>


    <!-- <div class="advanced_container" style="width:100%; height:150px;"> 
        <span> esc_html($settings['before_text']) </span> 
        <span>  esc_html($settings['after_text']) </span> 
    </div> -->
        
      
    
 
    }
}


  
        
 